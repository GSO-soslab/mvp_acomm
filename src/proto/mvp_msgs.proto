syntax = "proto2";
import "dccl/option_extensions.proto";


message PoseCommand
{
    option (dccl.msg) = {
        codec_version: 4
        id: 1
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    optional double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];
}


message PoseResponse
{
    option (dccl.msg) = {   
        codec_version: 4
        id: 101
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    required double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];
    //nav solution from global robot localization
    required double latitude = 4 [(dccl.field) = {
        min: 40.491621
        max: 42.491621
        precision: 6
    }];
    required double longitude = 5 [(dccl.field) = {
        min: -72.422134
        max: -70.422134
        precision: 6
    }];

    required float altitude = 6 [(dccl.field) = {
        min: -100
        max: 0
        precision: 1
    }];
    
    //quaternion rotation
    required float quat_x = 7 [(dccl.field) = {
        min: -1
        max: 1
        precision: 4
    }];

    required float quat_y = 8 [(dccl.field) = {
        max: 1
        min: -1
        precision: 4
    }];

    required float quat_z = 9 [(dccl.field) = {
        min: -1
        max: 1
        precision: 4
    }];

    required float quat_w = 10 [(dccl.field) = {
        min: -1
        max: 1
        precision: 4
    }];
}

message PowerCommand {
    option (dccl.msg) = {   
        codec_version: 4
        id: 2
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    optional double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];
}

message PowerResponse {
    option (dccl.msg) = {   
        codec_version: 4
        id: 102
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    optional double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];

    //battery voltage
    required float battery_voltage = 4[(dccl.field)={
        min: 12
        max: 22
        precision: 3
    }];

    //battery current
    required float current = 5[(dccl.field)={
        min: -50
        max: 50
        precision: 3
    }];
}

message RelativePoseCommand {
    option (dccl.msg) = {   
        codec_version: 4
        id: 3
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    optional double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];
    
    required Frame parent = 4;
    required Frame child = 5;
    enum Frame
    {
        BASE_LINK = 0;
        ODOM = 1;
        WORLD = 2;
        USBL = 3;
    }
}

message RelativePoseResponse {
    option (dccl.msg) = {   
        codec_version: 4
        id: 103
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    optional double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];
    //
    required Frame parent = 4;
    required Frame child = 5;

    //nav solution from global robot localization
    required double latitude = 6 [(dccl.field) = {
        min: 40.491621
        max: 42.491621
        precision: 6
    }];
    required double longitude = 7 [(dccl.field) = {
        min: -72.422134
        max: -70.422134
        precision: 6
    }];

    //nav solution from local robot localization
    required float x = 8 [(dccl.field) = {
        min: -10000
        max: 10000
        precision: 1
    }];

    required float y = 9 [(dccl.field) = {
        min: -10000
        max: 10000
        precision: 1
    }];

    required float z = 10 [(dccl.field) = {
        min: 0
        max: 100
        precision: 1
    }];
    
    //quaternion rotation
    required float quat_x = 11 [(dccl.field) = {
        min: -1
        max: 1
        precision: 4
    }];

    required float quat_y = 12 [(dccl.field) = {
        min: -1
        max: 1
        precision: 4
    }];

    required float quat_z = 13 [(dccl.field) = {
        min: -1
        max: 1
        precision: 4
    }];

    required float quat_w = 14 [(dccl.field) = {
        min: -1
        max: 1
        precision: 4
    }];

    enum Frame
    {
        BASE_LINK = 0;
        ODOM = 1;
        WORLD = 2;
        USBL = 3;
    }
}

message ControllerStateCommand {
    option (dccl.msg) = {   
        codec_version: 4
        id: 4
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    optional double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];

    required Mode mode = 4;

    optional ControllerState state = 5 [(dccl.field) = {
        dynamic_conditions {
            only_if: "this.mode == 'COMMAND'"
        }
    }];

    enum Mode 
    {
        QUERY=0;
        COMMAND=1;
    }

    enum ControllerState
    {
        DISABLE=0;
        ENABLE=1;
    }

}

message ControllerStateResponse {
    option (dccl.msg) = {   
        codec_version: 4
        id: 104
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    optional double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];

    optional ControllerState state = 4;

    enum ControllerState
    {
        DISABLE=0;
        ENABLE=1;
    }
       
}


message DirectControlCommand {
    option (dccl.msg) = {   
        codec_version: 4
        id: 5
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    optional double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];

    required Frame frame = 4;
    enum Frame
    {
        BASE_LINK = 0;
        ODOM = 1;
        WORLD = 2;
        USBL = 3;
    };
    
    required float x = 5 [(dccl.field) = {
        min: -10000
        max: 10000
        precision: 1
    }];

    required float y = 6 [(dccl.field) = {
        min: -10000
        max: 10000
        precision: 1
    }];

    required float z = 7 [(dccl.field) = {
        min: 0
        max: 100
        precision: 1
    }];

    required float roll = 8 [(dccl.field) = {
        min: -1.57
        max: 1.57
        precision: 2
    }];

    required float pitch = 9 [(dccl.field) = {
        min: -1.57
        max: 1.57
        precision: 2
    }];

    required float yaw = 10 [(dccl.field) = {
        min: 0
        max: 3.14
        precision: 2
    }];

    required float u = 11 [(dccl.field) = {
        min: -2
        max: 2
        precision: 2
    }];

    required float v = 12 [(dccl.field) = {
        min: -2
        max: 2
        precision: 2
    }];

    required float w = 13 [(dccl.field) = {
        min: -2
        max: 2
        precision: 2
    }];

    required float p = 14 [(dccl.field) = {
        min: -2
        max: 2
        precision: 2
    }];

    required float q = 15 [(dccl.field) = {
        min: -2
        max: 2
        precision: 2
    }];

    required float r = 16 [(dccl.field) = {
        min: -2
        max: 2
        precision: 2
    }];
}

message HelmStateCommand {
    option (dccl.msg) = {   
        codec_version: 4
        id: 6
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    optional double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];

    required Mode mode = 4;

    optional HelmState state = 5 [(dccl.field) = {
        dynamic_conditions {
            only_if: "this.mode == 'COMMAND'"
        }
    }];

    enum Mode 
    {
        QUERY=0;
        COMMAND=1;
    }

    enum HelmState
    {
        KILL = 0;
        START = 1;
        SURVEY_LOCAL = 2;
        SURVEY_GLOBAL = 3;
        DIRECT_CONTROL = 4;
        SURVEY_3D = 5;
    };
}

message HelmStateResponse {
    option (dccl.msg) = {   
        codec_version: 4
        id: 106
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    optional double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];
    required HelmState helm_state = 4;
    enum HelmState
    {
        KILL = 0;
        START = 1;
        SURVEY_LOCAL = 2;
        SURVEY_GLOBAL = 3;
        DIRECT_CONTROL = 4;
        SURVEY_3D = 5;
    };
}

message WaypointCommand {
    option (dccl.msg) = {   
        codec_version: 4
        id: 7
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 1
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    optional double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];

    required Mode mode = 4;

    repeated int32 wpt_num = 5 [(dccl.field) = {
        min: 0,
        max:  32,
        precision: 0
        max_repeat: 3
        dynamic_conditions {
            only_if: "this.waypoint_mode == 'COMMAND'"
        }
    }];
    //global waypoint
    repeated double latitude = 6 [(dccl.field) = {
        min: 40.491621
        max: 42.491621
        precision: 6
        max_repeat: 3
    }];
    repeated double longitude = 7 [(dccl.field) = {
        min: -72.422134
        max: -70.422134
        precision: 6
        max_repeat: 3
    }];

    repeated float z = 8 [(dccl.field) = {
        min: 0,
        max: 100,
        precision: 1
        max_repeat: 3
        dynamic_conditions {
            only_if: "this.mode == 'COMMAND'"
        }
    }];

    optional bool end = 9 [(dccl.field) = {
        dynamic_conditions {
            only_if: "this.mode == 'COMMAND'"
        }
    }];

    enum Mode 
    {
        QUERY=0;
        COMMAND=1;
    }
}

message MultiWaypointResponse {
    option (dccl.msg) = {   
        codec_version: 4
        id: 107
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 1
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    required double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];

    repeated int32 wpt_num = 4 [(dccl.field) = {
        min: 0,
        max:  32,
        precision: 0
        max_repeat: 3
    }];
    repeated double latitude = 5 [(dccl.field) = {
        min: 40.491621
        max: 42.491621
        precision: 6
        max_repeat: 3
    }];
    repeated double longitude = 6 [(dccl.field) = {
        min: -72.422134
        max: -70.422134
        precision: 6
        max_repeat: 3
    }];
    repeated float z = 7 [(dccl.field) = {
        min: 0,
        max: 100,
        precision: 1
        max_repeat: 3
    }];

    optional bool end = 8;
}

message MultiWaypointCommand {
    option (dccl.msg) = {   
        codec_version: 4
        id: 9
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 1
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    optional double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];

    required Mode mode = 4;

    repeated int32 wpt_num = 5 [(dccl.field) = {
        min: 0,
        max:  32,
        precision: 0
        max_repeat: 3
        dynamic_conditions {
            only_if: "this.waypoint_mode == 'COMMAND'"
        }
    }];
    //global waypoint
    repeated float x = 6 [(dccl.field) = {
        min: -10000
        max: 10000
        precision: 1
        max_repeat: 3
        dynamic_conditions {
            only_if: "this.mode == 'COMMAND'"
        }
    }];
    repeated float y = 7 [(dccl.field) = {
        min: -10000
        max: 10000
        precision: 1
        max_repeat: 3
        dynamic_conditions {
            only_if: "this.mode == 'COMMAND'"
        }
    }];

    repeated float z = 8 [(dccl.field) = {
        min: 0,
        max: 100,
        precision: 1
        max_repeat: 3
        dynamic_conditions {
            only_if: "this.mode == 'COMMAND'"
        }
    }];

    optional bool end = 9 [(dccl.field) = {
        dynamic_conditions {
            only_if: "this.mode == 'COMMAND'"
        }
    }];

    enum Mode 
    {
        QUERY=0;
        COMMAND=1;
    }
}

message ExecuteWaypoints {
    option (dccl.msg) = {   
        codec_version: 4
        id: 10
        max_bytes: 31 };

    required int32 source = 1 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    required int32 destination = 2 [(dccl.field) = {
        min: 0
        max: 15
        precision: 0
    }];

    //time since epoch (including miliseconds)
    //max time is Jan 1 2030, please update future soslab member
    optional double time = 3 [(dccl.field) = {
        min:  1672531200
        max:  1893456000
        precision: 3
    }];

    required ExecuteMode mode = 4;

    enum ExecuteMode
    {
        APPEND = 0;
        UPDATE = 1;
    };
}